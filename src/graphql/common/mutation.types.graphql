type Mutation {
  createPin(
    name: String!
    board: ID! # In the format <username>/<board_name>
    note: String!
    link: String
    image: ImageScalar # image we want to upload via multipart form data
    image_url: String # link to image we want to Pin
    image_base64: String # Base64 encoded image
  ): Pin @authenticated
  # image || image_url || image_base64 mandatory

  updatePin(
    _id: ID! # ID of pin to change
    board: ID # The board you want to move the Pin to, in the format <username>/<board_name>.
    note: String # The new Pin description.
    link: String # The new Pin link.
  ): Pin @authenticated

  deletePin(_id: ID!): Pin @authenticated

  # Return token for user
  createUser(
    username: String!
    password: String!
    created_at: Date
    first_name: String
    last_name: String
    bio: String
  ): String

  # Return token for user
  loginUser(username: String!, password: String!): String

  # Makes the authenticated user follow the specified user.
  followUser(_id: ID!): User @authenticated

  # Makes the authenticated user unfollow the specified user.
  stopFollowingUser(_id: ID!): User @authenticated

  # Makes the authenticated user follow the specified board.
  followBoard(_id: ID!): Board @authenticated

  # Makes the authenticated user unfollow the specified board.
  stopFollowingBoard(_id: ID!): Board @authenticated

  # Creates a board for the authenticated user.
  createBoard(name: String!, description: String): Board @authenticated

  # Changes the chosen boardâ€™s name and/or description.
  updateBoard(
    # The board you want to edit
    _id: ID!
    # new Board name
    name: String
    # new board description
    description: String
  ): Board @authenticated

  # Deletes the specified board. This action is permanent and cannot be undone.
  deleteBoard(_id: ID!): Board @authenticated
}

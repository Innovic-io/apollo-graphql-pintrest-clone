type Mutation {
  #################### PIN MUTATIONS ####################

  createPin(
    board: String!, # In the format <username>/<board_name>
    note: String!,
    link:String,
    image: ImageScalar,        # image we want to upload via multipart form data
    image_url: String    # link to image we want to Pin
    image_base64: String # Base64 encoded image
  ): Pin                 # image || image_url || image_base64 mandatory
  # default response returns the note, URL, link and ID of the created Pin.

  updatePin(
    pin: ID!, # ID of pin to change
    board: String, # The board you want to move the Pin to, in the format <username>/<board_name>.
    note: String, # The new Pin description.
    link: String # The new Pin link.
  ): Pin

  deletePin( pin:ID!): Pin

  #################### USER MUTATIONS ####################

  # My idea to make User
  createUser(
    username: String!,
    first_name: String,
    last_name: String,
    bio: String
  ): User

  createFollowingBoard(board: String!): Board # board format = <username>/<board_name>.
  # Makes the authenticated user follow the specified board.
  # A empty response (or lack of error code) indicates success.

  createFollowingUser(user: String!): User # user = The username of the user that you want to follow.
  # Makes the authenticated user follow the specified user.
  # A empty response (or lack of error code) indicates success.


  deleteFollowingBoard(board: String!): Board # board format = <username>/<board_name>.
  # Makes the authenticated user unfollow the specified board.
  # A empty response (or lack of error code) indicates success.

  deleteFollowingUser(user: String): User # user = username OR user ID
  # Makes the authenticated user unfollow the specified user.
  # A empty response (or lack of error code) indicates success.

  #################### BOARD MUTATIONS ####################

  createBoard(name: String!, description: String): Board
  # Creates a board for the authenticated user.
  # The default response returns the ID, URL and name of the created board.

  updateBoard(
    board: String!,     # The board you want to edit in the format <username>/<board_name>
    name: String,       # new Board name
    description: String # new board description
  ): Board
  # Changes the chosen boardâ€™s name and/or description.
  # The default response returns the ID, URL and name of the edited board.

  deleteBoard(board: String!): Board
  # Deletes the specified board. This action is permanent and cannot be undone.
}
